<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="17" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="TestAll" duration-ms="47" started-at="2014-03-21T04:15:07Z" finished-at="2014-03-21T04:15:07Z">
    <groups>
    </groups>
    <test name="order" duration-ms="47" started-at="2014-03-21T04:15:07Z" finished-at="2014-03-21T04:15:07Z">
      <class name="com.albion.HasCycleList.HasCycleTest">
        <test-method status="PASS" signature="hasCycle(com.albion.core.ListNode)[pri:0, instance:com.albion.HasCycleList.HasCycleTest@15f48262]" name="hasCycle" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@197200b4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasCycle -->
      </class> <!-- com.albion.HasCycleList.HasCycleTest -->
      <class name="com.albion.reversewords.ReverseWordsTest">
        <test-method status="PASS" signature="reverseWords(java.lang.String, java.lang.String)[pri:0, instance:com.albion.reversewords.ReverseWordsTest@7d95d4fe]" name="reverseWords" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reverseWords -->
      </class> <!-- com.albion.reversewords.ReverseWordsTest -->
      <class name="com.albion.removeDup.RemoveDupListTest">
        <test-method status="PASS" signature="deleteDuplicatesTest2(com.albion.core.ListNode)[pri:0, instance:com.albion.removeDup.RemoveDupListTest@356f144c]" name="deleteDuplicatesTest2" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@1629ce8c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteDuplicatesTest2 -->
      </class> <!-- com.albion.removeDup.RemoveDupListTest -->
      <class name="com.albion.ReverseListAdd.ReverseListAddTest">
        <test-method status="PASS" signature="addTwoNumbers(com.albion.core.ListNode, com.albion.core.ListNode)[pri:0, instance:com.albion.ReverseListAdd.ReverseListAddTest@77d2b01b]" name="addTwoNumbers" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@4c53ab04]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.albion.core.ListNode@900bac2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTwoNumbers -->
      </class> <!-- com.albion.ReverseListAdd.ReverseListAddTest -->
      <class name="com.albion.PostOrderIterative.PostOrderTraversalTest">
        <test-method status="PASS" signature="postorderTraversal(com.albion.core.TreeNode)[pri:0, instance:com.albion.PostOrderIterative.PostOrderTraversalTest@2927fa12]" name="postorderTraversal" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.TreeNode@4cedf389]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postorderTraversal -->
        <test-method status="PASS" signature="postorderTraversal(com.albion.core.TreeNode)[pri:0, instance:com.albion.PostOrderIterative.PostOrderTraversalTest@2927fa12]" name="postorderTraversal" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.TreeNode@3ff2cea2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postorderTraversal -->
      </class> <!-- com.albion.PostOrderIterative.PostOrderTraversalTest -->
      <class name="com.albion.palindrome.PalindromeTest">
        <test-method status="PASS" signature="isPalindrome()[pri:0, instance:com.albion.palindrome.PalindromeTest@9a68ef9]" name="isPalindrome" duration-ms="1" started-at="2014-03-20T21:15:07Z" finished-at="2014-03-20T21:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPalindrome -->
      </class> <!-- com.albion.palindrome.PalindromeTest -->
      <class name="com.albion.EquallyMatchedBraces.MyClassTest">
        <test-method status="PASS" signature="check_braces([Ljava.lang.String;)[pri:0, instance:com.albion.EquallyMatchedBraces.MyClassTest@679bfb30]" name="check_braces" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2be2befa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_braces -->
      </class> <!-- com.albion.EquallyMatchedBraces.MyClassTest -->
      <class name="com.albion.RPN.RPNTest">
        <test-method status="PASS" signature="evalRPN([Ljava.lang.String;, int)[pri:0, instance:com.albion.RPN.RPNTest@68814013]" name="evalRPN" duration-ms="0" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@33682598]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evalRPN -->
        <test-method status="PASS" signature="evalRPN([Ljava.lang.String;, int)[pri:0, instance:com.albion.RPN.RPNTest@68814013]" name="evalRPN" duration-ms="0" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7a7c3885]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evalRPN -->
      </class> <!-- com.albion.RPN.RPNTest -->
      <class name="com.albion.atoi.AtoiTest">
        <test-method status="PASS" signature="atoi(java.lang.String, int)[pri:0, instance:com.albion.atoi.AtoiTest@177f409c]" name="atoi" duration-ms="8" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atoi -->
      </class> <!-- com.albion.atoi.AtoiTest -->
      <class name="com.albion.SortedArrayBalancedBST.SortedArrayBalancedBST">
        <test-method status="PASS" signature="sortedListToBST(com.albion.core.ListNode)[pri:0, instance:com.albion.SortedArrayBalancedBST.SortedArrayBalancedBST@36baa466]" name="sortedListToBST" duration-ms="1" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@4b142196]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortedListToBST -->
      </class> <!-- com.albion.SortedArrayBalancedBST.SortedArrayBalancedBST -->
      <class name="com.albion.InsertionSort.InsertionTest">
        <test-method status="PASS" signature="insertionSortList(com.albion.core.ListNode)[pri:0, instance:com.albion.InsertionSort.InsertionTest@62facf0b]" name="insertionSortList" duration-ms="0" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@1b31303f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertionSortList -->
        <test-method status="PASS" signature="insertionSortList(com.albion.core.ListNode)[pri:0, instance:com.albion.InsertionSort.InsertionTest@62facf0b]" name="insertionSortList" duration-ms="0" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@7c65216]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertionSortList -->
        <test-method status="PASS" signature="insertionSortList(com.albion.core.ListNode)[pri:0, instance:com.albion.InsertionSort.InsertionTest@62facf0b]" name="insertionSortList" duration-ms="0" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@474b5f4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertionSortList -->
      </class> <!-- com.albion.InsertionSort.InsertionTest -->
      <class name="com.albion.ReorderList.ReorderListTest">
        <test-method status="PASS" signature="reorderList(com.albion.core.ListNode)[pri:0, instance:com.albion.ReorderList.ReorderListTest@f9da4fc]" name="reorderList" duration-ms="0" started-at="2014-03-20T21:15:07Z" data-provider="data01" finished-at="2014-03-20T21:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.albion.core.ListNode@5f0ab09f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reorderList -->
      </class> <!-- com.albion.ReorderList.ReorderListTest -->
      <class name="com.albion.unsolved.misc.KycTest">
        <test-method status="PASS" signature="test01()[pri:0, instance:com.albion.unsolved.misc.KycTest@7455d93d]" name="test01" duration-ms="1" started-at="2014-03-20T21:15:07Z" finished-at="2014-03-20T21:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
      </class> <!-- com.albion.unsolved.misc.KycTest -->
    </test> <!-- order -->
  </suite> <!-- TestAll -->
</testng-results>
